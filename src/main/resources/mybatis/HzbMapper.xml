<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.zhpay.dao.IHzbHoldDAO">
	<resultMap id="hzb_DB_Result" type="hzb">
		<result column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="mobile" property="mobile" />
		<result column="hzb_code" property="hzbCode" />
		<result column="status" property="status" />
		<result column="price" property="price" />
		<result column="currency" property="currency" />
		<result column="period_rock_num" property="periodRockNum" />
		<result column="total_rock_num" property="totalRockNum" />
		<result column="distance" property="distance" />
		<result column="ip" property="ip" />
		<result column="pay_group" property="payGroup" />
		<result column="pay_code" property="payCode" />
		<result column="pay_datetime" property="payDatetime" />
		<result column="system_code" property="systemCode" />
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		<if test="id != null and id != '' ">
				AND t.id = #{id}
			</if>
			<if test="status != null and status != '' ">
				<choose>
					<when test='status == "effect"'>
						AND t.status in(1,2)
					</when>
				    <otherwise>
						AND t.status = #{status}
					</otherwise>
				</choose>
			</if>
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<if test='userList != null and userList.size() > 0'>
				AND t.user_id in 
                <foreach item="item" index="index" collection="userList" open="(" separator="," close=")">
	            	#{item}
                </foreach> 
			</if>
			<if test="periodRockNum != null and periodRockNum != '' ">
				<![CDATA[AND t.period_rock_num < #{periodRockNum}]]>
			</if>
			<if test="distance != null and distance != '' ">
				<![CDATA[ having distance <= #{distance}]]>
			</if>
			<if test="payGroup != null and payGroup != '' ">
				AND t.pay_group = #{payGroup}
			</if>
			<if test="payCode != null and payCode != '' ">
				AND t.pay_code = #{payCode}
			</if>
			<if test="systemCode != null and systemCode != '' ">
				AND t.system_code = #{systemCode}
			</if>
		</trim>
	</sql>
	
	<select id="select_hzb" parameterType="hzb" resultMap="hzb_DB_Result">
		SELECT
		t.id
		,t.user_id
		,tu.mobile
		,t.hzb_code
		,t.status
		,t.price
		,t.currency
		,t.period_rock_num
		,t.total_rock_num
		,t.ip
		,t.pay_group
		,t.pay_code
		,t.pay_datetime
		,t.system_code
		FROM
		tyqs_hzb t INNER JOIN ${userDB}.tstd_user tu ON t.user_id = tu.user_id 
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	<select id="select_hzb_count" parameterType="hzb"
		resultType="java.lang.Long">
		SELECT count(1) FROM tyqs_hzb t
		<include refid="where_condition" />
	</select>
	
	<select id="select_hzb_distance" parameterType="hzb" resultMap="hzb_DB_Result">
		SELECT
		t.id
		,t.user_id
		,tuser.mobile
		,t.hzb_code
		,t.status
		,t.price
		,t.currency
		,t.period_rock_num
		,t.total_rock_num
		,t.system_code
		,ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{userLatitude}*PI()/180-tu.latitude*PI()/180)/2),2)+COS(#{userLatitude}*PI()/180)*COS(tu.latitude*PI()/180)*POW(SIN((#{userLongitude}*PI()/180-tu.longitude*PI()/180)/2),2)))*1000) as distance
		FROM
		tyqs_hzb t INNER JOIN ${userDB}.tstd_user_ext tu ON t.user_id = tu.user_id INNER JOIN ${userDB}.tstd_user tuser ON tu.user_id = tuser.user_id 
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			  distance asc
		</trim>
	</select>
	
	<select id="select_hzb_distance_count" parameterType="hzb"
		resultType="java.lang.Long">
		SELECT count(1) FROM tyqs_hzb t INNER JOIN ${userDB}.tstd_user_ext tu ON t.user_id = tu.user_id 
		<include refid="where_condition" />
	</select>

	<insert id="insert_hzb" parameterType="hzb">
		INSERT INTO
		tyqs_hzb(
		user_id
		,hzb_code
		,status
		,price
		,currency
		,period_rock_num
		,total_rock_num
		,pay_amount1
		,pay_amount2
		,pay_amount3
		,ip
		,pay_group
		,system_code
		)
		VALUES(
		#{userId}
		,#{hzbCode}
		,#{status}
		,#{price}
		,#{currency}
		,#{periodRockNum}
		,#{totalRockNum}
		,#{payAmount1}
		,#{payAmount2}
		,#{payAmount3}
		,#{ip}
		,#{payGroup}
		,#{systemCode}
		)
	</insert>

	<update id="update_rockNum" parameterType="hzb">
		UPDATE tyqs_hzb
		SET
		period_rock_num = #{periodRockNum}
		,total_rock_num = #{totalRockNum}
		WHERE id = #{id}
	</update>
	
	<update id="update_resetPeriodRockNum" parameterType="hzb">
		UPDATE tyqs_hzb
		SET
		period_rock_num = 0
	</update>
	
	<update id="update_status" parameterType="hzb">
		UPDATE tyqs_hzb
		SET
		status = #{status}
		WHERE id = #{id}
	</update>
	
	<update id="update_pay_status" parameterType="hzb">
		UPDATE tyqs_hzb
		SET
		status = #{status}
		,pay_amount1 = #{payAmount1}
		,pay_amount2 = #{payAmount2}
		,pay_amount3 = #{payAmount3}
		,pay_code = #{payCode}
		,pay_datetime = #{payDatetime}
		WHERE id = #{id}
	</update>
	
	<select id="select_totalAmount" parameterType="hzb"
		resultType="java.lang.Long">
		SELECT sum(price) FROM tyqs_hzb t
		<include refid="where_condition" />
	</select>
</mapper>